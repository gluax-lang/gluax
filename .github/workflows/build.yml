name: Build Gluax

on:
  workflow_run:
    workflows: ["Bump Version"]
    types:
      - completed

jobs:
  build:
    permissions: write-all
    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, 386, arm64]
        include:
          - os: linux
            runs_on: ubuntu-22.04
          - os: windows
            runs_on: windows-2022
    runs-on: ${{ matrix.runs_on }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - uses: actions/download-artifact@v4
        with:
          name: version
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: get_version
        shell: bash
        run: |
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Build and Package Gluax
        shell: bash
        run: |
          mkdir -p dist/${{ matrix.os }}-${{ matrix.arch }}
          cd cmd
          EXT=""
          if [[ "${{ matrix.os }}" == "windows" ]]; then EXT=".exe"; fi
          env GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "-X main.Version=${{ steps.get_version.outputs.version }}" -o ../dist/${{ matrix.os }}-${{ matrix.arch }}/gluax${EXT}
          cd ../dist/${{ matrix.os }}-${{ matrix.arch }}
          if [[ "${{ matrix.os }}" == "windows" ]]; then
            7z a ../gluax-${{ matrix.os }}-${{ matrix.arch }}.zip gluax.exe
          else
            zip ../gluax-${{ matrix.os }}-${{ matrix.arch }}.zip gluax
          fi
          cd ../..

      - name: Release Artifacts
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.get_version.outputs.version }}"
          artifacts: |
            dist/gluax-*.zip
